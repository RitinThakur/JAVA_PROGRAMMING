package pattern;

/**
 * Program Name: P38
 * Package: pattern
 *
 * üéØ Description:
 * This program prints a **right-aligned triangular pattern** that alternates between
 * letters ('a') and numbers. The pattern depends on the sum of row and column indices.
 *
 * üß© Concepts Used:
 * - Nested loops for rows and columns
 * - Conditional statements to determine whether to print a number or a letter
 * - Right alignment using spaces
 * - Incrementing numbers and letters with `a++` and `ch++`
 *
 * üß† Logic Explanation:
 * 1Ô∏è‚É£ Outer loop (`i`) ‚Üí iterates through rows (0 to 3)
 * 2Ô∏è‚É£ Inner loop (`j`) ‚Üí iterates through columns (0 to 3)
 * 3Ô∏è‚É£ Row conditions:
 *    - `i == 0 || i == 2` ‚Üí print letters ('a') when `i + j >= n-1`
 *    - `i == 1 || i == 3` ‚Üí print numbers starting from 1 when `i + j >= n-1`
 * 4Ô∏è‚É£ `i + j >= n-1` ‚Üí ensures right-aligned triangle
 * 5Ô∏è‚É£ `System.out.print(" ")` ‚Üí print spaces before actual value for alignment
 * 6Ô∏è‚É£ `System.out.println()` ‚Üí move to the next row
 *
 * üñ•Ô∏è Sample Output:
 *
 *    a
 *   12
 *  aaa
 * 3456
 */
public class P38 {
	public static void main(String[] args) {
		int n = 4;
		int a = 1;
		char ch = 'a';
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 || i == 2) {
					// Rows 0 and 2 ‚Üí letters
					if (i + j >= n - 1) {
						System.out.print(ch);
					} else {
						System.out.print(" ");
					}
				} else if (i == 1 || i == 3) {
					// Rows 1 and 3 ‚Üí numbers
					if (i + j >= n - 1) {
						System.out.print(a++);
					} else {
						System.out.print(" ");
					}
				}
			}
			System.out.println(); // Move to next row
		}
	}
}
